<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="317" passed="317" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-28T18:49:21 IST" name="Command line suite" finished-at="2024-02-28T18:49:31 IST" duration-ms="9440">
    <groups>
    </groups>
    <test started-at="2024-02-28T18:49:21 IST" name="Command line test" finished-at="2024-02-28T18:49:31 IST" duration-ms="9440">
      <class name="com.aventstack.extentreports.entity.service.ExceptionInfoServiceTest">
        <test-method signature="exceptionInfo()[pri:0, instance:com.aventstack.extentreports.entity.service.ExceptionInfoServiceTest@53976f5c]" started-at="2024-02-28T18:49:22 IST" name="exceptionInfo" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionInfo -->
      </class> <!-- com.aventstack.extentreports.entity.service.ExceptionInfoServiceTest -->
      <class name="com.aventstack.extentreports.reporter.SparkReporterTest">
        <test-method signature="createsReportWithNoTestsInitFile()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:29 IST" name="createsReportWithNoTestsInitFile" finished-at="2024-02-28T18:49:29 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createsReportWithNoTestsInitFile -->
        <test-method signature="createsReportWithNoTestsInitPath()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:29 IST" name="createsReportWithNoTestsInitPath" finished-at="2024-02-28T18:49:29 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createsReportWithNoTestsInitPath -->
        <test-method signature="reportContainsTestsAndNodes()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:29 IST" name="reportContainsTestsAndNodes" finished-at="2024-02-28T18:49:29 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportContainsTestsAndNodes -->
        <test-method signature="reportContainsTestsAndNodesDevices()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:29 IST" name="reportContainsTestsAndNodesDevices" finished-at="2024-02-28T18:49:29 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportContainsTestsAndNodesDevices -->
        <test-method signature="reportContainsTestsAndNodesTags()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:29 IST" name="reportContainsTestsAndNodesTags" finished-at="2024-02-28T18:49:30 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportContainsTestsAndNodesTags -->
        <test-method signature="reportContainsTestsAndNodesUsers()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:30 IST" name="reportContainsTestsAndNodesUsers" finished-at="2024-02-28T18:49:30 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportContainsTestsAndNodesUsers -->
        <test-method signature="sparkOffline()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:30 IST" name="sparkOffline" finished-at="2024-02-28T18:49:30 IST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sparkOffline -->
        <test-method signature="statusFilterable()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:30 IST" name="statusFilterable" finished-at="2024-02-28T18:49:30 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusFilterable -->
        <test-method signature="statusFilterableNode()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterTest@1033576a]" started-at="2024-02-28T18:49:30 IST" name="statusFilterableNode" finished-at="2024-02-28T18:49:30 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusFilterableNode -->
      </class> <!-- com.aventstack.extentreports.reporter.SparkReporterTest -->
      <class name="com.aventstack.extentreports.reporter.FileReporterPathsTest">
        <test-method signature="jsonPathAsDirectory()[pri:0, instance:com.aventstack.extentreports.reporter.FileReporterPathsTest@59402b8f]" started-at="2024-02-28T18:49:27 IST" name="jsonPathAsDirectory" finished-at="2024-02-28T18:49:27 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonPathAsDirectory -->
        <test-method signature="jsonPathAsFile()[pri:0, instance:com.aventstack.extentreports.reporter.FileReporterPathsTest@59402b8f]" started-at="2024-02-28T18:49:27 IST" name="jsonPathAsFile" finished-at="2024-02-28T18:49:27 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonPathAsFile -->
        <test-method signature="sparkPathAsDirectory()[pri:0, instance:com.aventstack.extentreports.reporter.FileReporterPathsTest@59402b8f]" started-at="2024-02-28T18:49:27 IST" name="sparkPathAsDirectory" finished-at="2024-02-28T18:49:28 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sparkPathAsDirectory -->
        <test-method signature="sparkPathAsFile()[pri:0, instance:com.aventstack.extentreports.reporter.FileReporterPathsTest@59402b8f]" started-at="2024-02-28T18:49:28 IST" name="sparkPathAsFile" finished-at="2024-02-28T18:49:28 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sparkPathAsFile -->
      </class> <!-- com.aventstack.extentreports.reporter.FileReporterPathsTest -->
      <class name="com.aventstack.extentreports.gherkin.GherkinKeywordTest">
        <test-method signature="testEnglishGherkinKeywords()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinKeywordTest@221a3fa4]" started-at="2024-02-28T18:49:23 IST" name="testEnglishGherkinKeywords" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnglishGherkinKeywords -->
        <test-method signature="testGermanGherkinKeywords()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinKeywordTest@221a3fa4]" started-at="2024-02-28T18:49:23 IST" name="testGermanGherkinKeywords" finished-at="2024-02-28T18:49:23 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGermanGherkinKeywords -->
        <test-method signature="testMixedGherkinKeywords()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinKeywordTest@221a3fa4]" started-at="2024-02-28T18:49:23 IST" name="testMixedGherkinKeywords" finished-at="2024-02-28T18:49:23 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedGherkinKeywords -->
      </class> <!-- com.aventstack.extentreports.gherkin.GherkinKeywordTest -->
      <class name="com.aventstack.extentreports.entity.TestEntityTest">
        <test-method signature="addChildToNullTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addChildToNullTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Node must not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Node must not be null
at com.aventstack.extentreports.util.Assert.notNull(Assert.java:6)
at com.aventstack.extentreports.model.Test.addChild(Test.java:70)
at com.aventstack.extentreports.entity.TestEntityTest.addChildToNullTest(TestEntityTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChildToNullTest -->
        <test-method signature="addChildToTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addChildToTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChildToTest -->
        <test-method signature="addChildToTestLeaf()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addChildToTestLeaf" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChildToTestLeaf -->
        <test-method signature="addChildToTestLevel()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addChildToTestLevel" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChildToTestLevel -->
        <test-method signature="addFailLogToTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addFailLogToTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailLogToTest -->
        <test-method signature="addLogToTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addLogToTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addLogToTest -->
        <test-method signature="addNullLogToTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addNullLogToTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Log must not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Log must not be null
at com.aventstack.extentreports.util.Assert.notNull(Assert.java:6)
at com.aventstack.extentreports.model.Test.addLog(Test.java:106)
at com.aventstack.extentreports.model.Test.addLog(Test.java:98)
at com.aventstack.extentreports.entity.TestEntityTest.addNullLogToTest(TestEntityTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNullLogToTest -->
        <test-method signature="addSkipLogToTest()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="addSkipLogToTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSkipLogToTest -->
        <test-method signature="ancestor()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="ancestor" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ancestor -->
        <test-method signature="computeTestStatusNode()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="computeTestStatusNode" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- computeTestStatusNode -->
        <test-method signature="computeTestStatusNoLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="computeTestStatusNoLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- computeTestStatusNoLog -->
        <test-method signature="computeTestStatusSkipAndFailLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="computeTestStatusSkipAndFailLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- computeTestStatusSkipAndFailLog -->
        <test-method signature="computeTestStatusSkipLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="computeTestStatusSkipLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- computeTestStatusSkipLog -->
        <test-method signature="hasAttributes()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="hasAttributes" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasAttributes -->
        <test-method signature="generatedLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="generatedLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatedLog -->
        <test-method signature="hasAuthor()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="hasAuthor" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasAuthor -->
        <test-method signature="hasCategory()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="hasCategory" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasCategory -->
        <test-method signature="hasDevice()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="hasDevice" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasDevice -->
        <test-method signature="hasScreenCapture()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="hasScreenCapture" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasScreenCapture -->
        <test-method signature="isTestBDD()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="isTestBDD" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTestBDD -->
        <test-method signature="logSeqIncrements(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="logSeqIncrements" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.entity.TestEntityTest.logSeqIncrements(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logSeqIncrements -->
        <test-method signature="testFullName()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testFullName" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullName -->
        <test-method signature="testEntities(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testEntities" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.entity.TestEntityTest.testEntities(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEntities -->
        <test-method signature="testHasAngLogWithLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testHasAngLogWithLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasAngLogWithLog -->
        <test-method signature="testHasAngLogWithGeneratedLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testHasAngLogWithGeneratedLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasAngLogWithGeneratedLog -->
        <test-method signature="testHasChildren()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testHasChildren" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasChildren -->
        <test-method signature="testHasAngLogWithNoLogs()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testHasAngLogWithNoLogs" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasAngLogWithNoLogs -->
        <test-method signature="testHasLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testHasLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasLog -->
        <test-method signature="testStatusWithLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testStatusWithLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusWithLog -->
        <test-method signature="testStatusWithLogStatusChanged()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testStatusWithLogStatusChanged" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusWithLogStatusChanged -->
        <test-method signature="testStatusWithoutLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="testStatusWithoutLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusWithoutLog -->
        <test-method signature="timeTaken()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="timeTaken" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTaken -->
        <test-method signature="timeTakenPretty()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="timeTakenPretty" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTakenPretty -->
        <test-method signature="timeTakenPrettyWithLog()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityTest@41e1e210]" started-at="2024-02-28T18:49:22 IST" name="timeTakenPrettyWithLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTakenPrettyWithLog -->
      </class> <!-- com.aventstack.extentreports.entity.TestEntityTest -->
      <class name="com.aventstack.extentreports.ExtentTestAttributesTest">
        <test-method signature="extentTestWithAuthor()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithAuthor" finished-at="2024-02-28T18:49:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithAuthor -->
        <test-method signature="extentTestWithCategory()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithCategory" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithCategory -->
        <test-method signature="extentTestWithDevice()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithDevice" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithDevice -->
        <test-method signature="extentTestWithNoAuthor()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithNoAuthor" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithNoAuthor -->
        <test-method signature="extentTestWithNoCategory()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithNoCategory" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithNoCategory -->
        <test-method signature="extentTestWithNoDevice()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesTest@fba92d3]" started-at="2024-02-28T18:49:22 IST" name="extentTestWithNoDevice" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithNoDevice -->
      </class> <!-- com.aventstack.extentreports.ExtentTestAttributesTest -->
      <class name="com.aventstack.extentreports.entity.ReportStatsTest">
        <test-method signature="allLevelMapsNonNull()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="allLevelMapsNonNull" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allLevelMapsNonNull -->
        <test-method signature="analysisStrategyDefault()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="analysisStrategyDefault" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- analysisStrategyDefault -->
        <test-method signature="statsAll()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="statsAll" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsAll -->
        <test-method signature="statsChildStatus()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="statsChildStatus" finished-at="2024-02-28T18:49:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsChildStatus -->
        <test-method signature="statsGrandchildStatus()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="statsGrandchildStatus" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsGrandchildStatus -->
        <test-method signature="statsSize()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="statsSize" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsSize -->
        <test-method signature="statsTestStatus()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsTest@696da30b]" started-at="2024-02-28T18:49:22 IST" name="statsTestStatus" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsTestStatus -->
      </class> <!-- com.aventstack.extentreports.entity.ReportStatsTest -->
      <class name="com.aventstack.extentreports.ExtentTestLogHierarchyTest">
        <test-method signature="info()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogHierarchyTest@231f98ef]" started-at="2024-02-28T18:49:23 IST" name="info" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- info -->
        <test-method signature="skipped()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogHierarchyTest@231f98ef]" started-at="2024-02-28T18:49:23 IST" name="skipped" finished-at="2024-02-28T18:49:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipped -->
        <test-method signature="passed()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogHierarchyTest@231f98ef]" started-at="2024-02-28T18:49:23 IST" name="passed" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passed -->
        <test-method signature="overall()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogHierarchyTest@231f98ef]" started-at="2024-02-28T18:49:23 IST" name="overall" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overall -->
        <test-method signature="warning()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogHierarchyTest@231f98ef]" started-at="2024-02-28T18:49:23 IST" name="warning" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warning -->
      </class> <!-- com.aventstack.extentreports.ExtentTestLogHierarchyTest -->
      <class name="com.aventstack.extentreports.entity.ReportStatsConcurrentTest">
        <test-method signature="concurrentAddModifyUpdateFlush()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsConcurrentTest@5fd4f8f5]" started-at="2024-02-28T18:49:22 IST" name="concurrentAddModifyUpdateFlush" finished-at="2024-02-28T18:49:22 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentAddModifyUpdateFlush -->
        <test-method signature="concurrentAddRemoveUpdateFlush()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsConcurrentTest@5fd4f8f5]" started-at="2024-02-28T18:49:22 IST" name="concurrentAddRemoveUpdateFlush" finished-at="2024-02-28T18:49:22 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentAddRemoveUpdateFlush -->
        <test-method signature="concurrentAddUpdateFlush()[pri:0, instance:com.aventstack.extentreports.entity.ReportStatsConcurrentTest@5fd4f8f5]" started-at="2024-02-28T18:49:22 IST" name="concurrentAddUpdateFlush" finished-at="2024-02-28T18:49:22 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentAddUpdateFlush -->
      </class> <!-- com.aventstack.extentreports.entity.ReportStatsConcurrentTest -->
      <class name="com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="beforeMethod" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="concurrentlyAssignedDevices()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="concurrentlyAssignedDevices" finished-at="2024-02-28T18:49:23 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentlyAssignedDevices -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="beforeMethod" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="concurrentlyAssignedTags()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="concurrentlyAssignedTags" finished-at="2024-02-28T18:49:23 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentlyAssignedTags -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="beforeMethod" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="concurrentlyAssignedUsers()[pri:0, instance:com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest@24569dba]" started-at="2024-02-28T18:49:23 IST" name="concurrentlyAssignedUsers" finished-at="2024-02-28T18:49:23 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentlyAssignedUsers -->
      </class> <!-- com.aventstack.extentreports.model.context.NamedAttributeContextManagerTest -->
      <class name="com.aventstack.extentreports.entity.AuthorEntityTest">
        <test-method signature="authorName()[pri:0, instance:com.aventstack.extentreports.entity.AuthorEntityTest@c333c60]" started-at="2024-02-28T18:49:22 IST" name="authorName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorName -->
      </class> <!-- com.aventstack.extentreports.entity.AuthorEntityTest -->
      <class name="com.aventstack.extentreports.entity.DeviceEntityTest">
        <test-method signature="deviceName()[pri:0, instance:com.aventstack.extentreports.entity.DeviceEntityTest@1eb5174b]" started-at="2024-02-28T18:49:22 IST" name="deviceName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceName -->
      </class> <!-- com.aventstack.extentreports.entity.DeviceEntityTest -->
      <class name="com.aventstack.extentreports.TestIdsTest">
        <test-method signature="verifyAllStartedTestsHaveUniqueIds(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.TestIdsTest@76494737]" started-at="2024-02-28T18:49:31 IST" name="verifyAllStartedTestsHaveUniqueIds" finished-at="2024-02-28T18:49:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.TestIdsTest.verifyAllStartedTestsHaveUniqueIds(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllStartedTestsHaveUniqueIds -->
      </class> <!-- com.aventstack.extentreports.TestIdsTest -->
      <class name="com.aventstack.extentreports.NaturalConfTest">
        <test-method signature="useNaturalConfReport()[pri:0, instance:com.aventstack.extentreports.NaturalConfTest@5ddeb7cb]" started-at="2024-02-28T18:49:23 IST" name="useNaturalConfReport" finished-at="2024-02-28T18:49:24 IST" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useNaturalConfReport -->
        <test-method signature="useNaturalConfReportWithTimeChanged()[pri:0, instance:com.aventstack.extentreports.NaturalConfTest@5ddeb7cb]" started-at="2024-02-28T18:49:24 IST" name="useNaturalConfReportWithTimeChanged" finished-at="2024-02-28T18:49:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useNaturalConfReportWithTimeChanged -->
        <test-method signature="useNaturalConfTest()[pri:0, instance:com.aventstack.extentreports.NaturalConfTest@5ddeb7cb]" started-at="2024-02-28T18:49:24 IST" name="useNaturalConfTest" finished-at="2024-02-28T18:49:24 IST" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useNaturalConfTest -->
        <test-method signature="useNaturalConfTestWithNodes()[pri:0, instance:com.aventstack.extentreports.NaturalConfTest@5ddeb7cb]" started-at="2024-02-28T18:49:24 IST" name="useNaturalConfTestWithNodes" finished-at="2024-02-28T18:49:25 IST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useNaturalConfTestWithNodes -->
        <test-method signature="useNaturalConfTestWithTimeChanged()[pri:0, instance:com.aventstack.extentreports.NaturalConfTest@5ddeb7cb]" started-at="2024-02-28T18:49:25 IST" name="useNaturalConfTestWithTimeChanged" finished-at="2024-02-28T18:49:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useNaturalConfTestWithTimeChanged -->
      </class> <!-- com.aventstack.extentreports.NaturalConfTest -->
      <class name="com.aventstack.extentreports.ExtentTestLogTest">
        <test-method signature="failDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="failDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failDetails -->
        <test-method signature="failMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="failMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failMarkup -->
        <test-method signature="failMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="failMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failMedia -->
        <test-method signature="failThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="failThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failThrowable -->
        <test-method signature="failThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="failThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failThrowableMedia -->
        <test-method signature="infoDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="infoDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infoDetails -->
        <test-method signature="infoMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="infoMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infoMarkup -->
        <test-method signature="infoMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="infoMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infoMedia -->
        <test-method signature="infoThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="infoThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infoThrowable -->
        <test-method signature="infoThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="infoThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infoThrowableMedia -->
        <test-method signature="logDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logDetails -->
        <test-method signature="logDetailsMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logDetailsMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logDetailsMedia -->
        <test-method signature="logMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logMarkup -->
        <test-method signature="logMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logMedia -->
        <test-method signature="logThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logThrowable -->
        <test-method signature="logThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logThrowableMedia -->
        <test-method signature="logWithStatusNull()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="logWithStatusNull" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Status must not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Status must not be null
at com.aventstack.extentreports.util.Assert.notNull(Assert.java:6)
at com.aventstack.extentreports.ExtentTest.log(ExtentTest.java:364)
at com.aventstack.extentreports.ExtentTestLogTest.logWithStatusNull(ExtentTestLogTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logWithStatusNull -->
        <test-method signature="passDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="passDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passDetails -->
        <test-method signature="passMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="passMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passMarkup -->
        <test-method signature="passMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="passMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passMedia -->
        <test-method signature="passThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="passThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passThrowable -->
        <test-method signature="passThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="passThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passThrowableMedia -->
        <test-method signature="skipDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="skipDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipDetails -->
        <test-method signature="skipMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="skipMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipMarkup -->
        <test-method signature="skipMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="skipMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipMedia -->
        <test-method signature="skipThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="skipThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipThrowable -->
        <test-method signature="skipThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="skipThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipThrowableMedia -->
        <test-method signature="warnDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="warnDetails" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warnDetails -->
        <test-method signature="warnMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="warnMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warnMarkup -->
        <test-method signature="warnMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="warnMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warnMedia -->
        <test-method signature="warnThrowable()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="warnThrowable" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warnThrowable -->
        <test-method signature="warnThrowableMedia()[pri:0, instance:com.aventstack.extentreports.ExtentTestLogTest@7c137fd5]" started-at="2024-02-28T18:49:23 IST" name="warnThrowableMedia" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- warnThrowableMedia -->
      </class> <!-- com.aventstack.extentreports.ExtentTestLogTest -->
      <class name="com.aventstack.extentreports.BddTypeTest">
        <test-method signature="andIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="andIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.andIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- andIsOfBddTypeWithBddChild -->
        <test-method signature="asteriskIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="asteriskIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.asteriskIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asteriskIsOfBddTypeWithBddChild -->
        <test-method signature="backgroundIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="backgroundIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.backgroundIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backgroundIsOfBddTypeWithBddChild -->
        <test-method signature="butIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="butIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.butIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- butIsOfBddTypeWithBddChild -->
        <test-method signature="featureIsOfBddType(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="featureIsOfBddType" finished-at="2024-02-28T18:49:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.featureIsOfBddType(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featureIsOfBddType -->
        <test-method signature="givenIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="givenIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.givenIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- givenIsOfBddTypeWithBddChild -->
        <test-method signature="scenarioIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="scenarioIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.scenarioIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioIsOfBddTypeWithBddChild -->
        <test-method signature="scenarioOutlineIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="scenarioOutlineIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.scenarioOutlineIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenarioOutlineIsOfBddTypeWithBddChild -->
        <test-method signature="thenIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="thenIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.thenIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thenIsOfBddTypeWithBddChild -->
        <test-method signature="whenIsOfBddTypeWithBddChild(java.lang.reflect.Method)[pri:0, instance:com.aventstack.extentreports.BddTypeTest@e7edb54]" started-at="2024-02-28T18:49:21 IST" name="whenIsOfBddTypeWithBddChild" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.aventstack.extentreports.BddTypeTest.whenIsOfBddTypeWithBddChild(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenIsOfBddTypeWithBddChild -->
      </class> <!-- com.aventstack.extentreports.BddTypeTest -->
      <class name="com.aventstack.extentreports.ExtentTestInvalidArgTest">
        <test-method signature="extentTestWithEmptyName()[pri:0, instance:com.aventstack.extentreports.ExtentTestInvalidArgTest@31ea9581]" started-at="2024-02-28T18:49:23 IST" name="extentTestWithEmptyName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:117)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:231)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:245)
at com.aventstack.extentreports.ExtentTestInvalidArgTest.extentTestWithEmptyName(ExtentTestInvalidArgTest.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithEmptyName -->
        <test-method signature="extentTestWithNullName()[pri:0, instance:com.aventstack.extentreports.ExtentTestInvalidArgTest@31ea9581]" started-at="2024-02-28T18:49:23 IST" name="extentTestWithNullName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:117)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:231)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:245)
at com.aventstack.extentreports.ExtentTestInvalidArgTest.extentTestWithNullName(ExtentTestInvalidArgTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTestWithNullName -->
      </class> <!-- com.aventstack.extentreports.ExtentTestInvalidArgTest -->
      <class name="com.aventstack.extentreports.entity.StatusEntityTest">
        <test-method signature="statusHierarchy()[pri:0, instance:com.aventstack.extentreports.entity.StatusEntityTest@2f8dad04]" started-at="2024-02-28T18:49:22 IST" name="statusHierarchy" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusHierarchy -->
        <test-method signature="statusMax()[pri:0, instance:com.aventstack.extentreports.entity.StatusEntityTest@2f8dad04]" started-at="2024-02-28T18:49:22 IST" name="statusMax" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusMax -->
        <test-method signature="statusMin()[pri:0, instance:com.aventstack.extentreports.entity.StatusEntityTest@2f8dad04]" started-at="2024-02-28T18:49:22 IST" name="statusMin" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusMin -->
      </class> <!-- com.aventstack.extentreports.entity.StatusEntityTest -->
      <class name="com.aventstack.extentreports.reporter.SparkReporterConfigTest">
        <test-method signature="loadJSONConfigFileTest()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterConfigTest@7c37508a]" started-at="2024-02-28T18:49:29 IST" name="loadJSONConfigFileTest" finished-at="2024-02-28T18:49:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadJSONConfigFileTest -->
        <test-method signature="loadXMLConfigFileTest()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterConfigTest@7c37508a]" started-at="2024-02-28T18:49:29 IST" name="loadXMLConfigFileTest" finished-at="2024-02-28T18:49:29 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLConfigFileTest -->
        <test-method signature="configTest()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterConfigTest@7c37508a]" started-at="2024-02-28T18:49:29 IST" name="configTest" finished-at="2024-02-28T18:49:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method signature="loadJSONConfigStringTest()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterConfigTest@7c37508a]" started-at="2024-02-28T18:49:29 IST" name="loadJSONConfigStringTest" finished-at="2024-02-28T18:49:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadJSONConfigStringTest -->
        <test-method signature="loadXMLConfigPathTest()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterConfigTest@7c37508a]" started-at="2024-02-28T18:49:29 IST" name="loadXMLConfigPathTest" finished-at="2024-02-28T18:49:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLConfigPathTest -->
      </class> <!-- com.aventstack.extentreports.reporter.SparkReporterConfigTest -->
      <class name="com.aventstack.extentreports.markuputils.ListTest">
        <test-method signature="orderedListFromArray()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="orderedListFromArray" finished-at="2024-02-28T18:49:23 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListFromArray -->
        <test-method signature="orderedListFromList()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="orderedListFromList" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListFromList -->
        <test-method signature="orderedListFromMap()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="orderedListFromMap" finished-at="2024-02-28T18:49:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListFromMap -->
        <test-method signature="orderedListFromSet()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="orderedListFromSet" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListFromSet -->
        <test-method signature="orderedListFromString()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="orderedListFromString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderedListFromString -->
        <test-method signature="unorderedListFromArray()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="unorderedListFromArray" finished-at="2024-02-28T18:49:23 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListFromArray -->
        <test-method signature="unorderedListFromList()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="unorderedListFromList" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListFromList -->
        <test-method signature="unorderedListFromMap()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="unorderedListFromMap" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListFromMap -->
        <test-method signature="unorderedListFromSet()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="unorderedListFromSet" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListFromSet -->
        <test-method signature="unorderedListFromString()[pri:0, instance:com.aventstack.extentreports.markuputils.ListTest@4d1c005e]" started-at="2024-02-28T18:49:23 IST" name="unorderedListFromString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unorderedListFromString -->
      </class> <!-- com.aventstack.extentreports.markuputils.ListTest -->
      <class name="com.aventstack.extentreports.ExtentReportsTest">
        <test-method signature="addTestRunnerOutputList()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="addTestRunnerOutputList" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTestRunnerOutputList -->
        <test-method signature="addTestRunnerOutputSingle()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="addTestRunnerOutputSingle" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTestRunnerOutputSingle -->
        <test-method signature="createTestOverloadKeywordName()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadKeywordName" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadKeywordName -->
        <test-method signature="createTestOverloadKeywordNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadKeywordNameDesc" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadKeywordNameDesc -->
        <test-method signature="createTestOverloadName()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadName" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadName -->
        <test-method signature="createTestOverloadNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadNameDesc" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadNameDesc -->
        <test-method signature="createTestOverloadTypeName()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadTypeName" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadTypeName -->
        <test-method signature="createTestOverloadTypeNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="createTestOverloadTypeNameDesc" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestOverloadTypeNameDesc -->
        <test-method signature="gherkinDialect()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="gherkinDialect" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gherkinDialect -->
        <test-method signature="keepLastRetryOnlyTestEnabled()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="keepLastRetryOnlyTestEnabled" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- keepLastRetryOnlyTestEnabled -->
        <test-method signature="keepLastRetryOnlyTestDisabled()[pri:0, instance:com.aventstack.extentreports.ExtentReportsTest@78123e82]" started-at="2024-02-28T18:49:22 IST" name="keepLastRetryOnlyTestDisabled" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- keepLastRetryOnlyTestDisabled -->
      </class> <!-- com.aventstack.extentreports.ExtentReportsTest -->
      <class name="com.aventstack.extentreports.AppenderTest">
        <test-method signature="children()[pri:0, instance:com.aventstack.extentreports.AppenderTest@77eca502]" started-at="2024-02-28T18:49:21 IST" name="children" finished-at="2024-02-28T18:49:21 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- children -->
        <test-method signature="testWithChildren()[pri:0, instance:com.aventstack.extentreports.AppenderTest@77eca502]" started-at="2024-02-28T18:49:21 IST" name="testWithChildren" finished-at="2024-02-28T18:49:21 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithChildren -->
        <test-method signature="testWithLogs()[pri:0, instance:com.aventstack.extentreports.AppenderTest@77eca502]" started-at="2024-02-28T18:49:21 IST" name="testWithLogs" finished-at="2024-02-28T18:49:21 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithLogs -->
        <test-method signature="testWithMedia()[pri:0, instance:com.aventstack.extentreports.AppenderTest@77eca502]" started-at="2024-02-28T18:49:21 IST" name="testWithMedia" finished-at="2024-02-28T18:49:21 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithMedia -->
        <test-method signature="testWithMediaBase64()[pri:0, instance:com.aventstack.extentreports.AppenderTest@77eca502]" started-at="2024-02-28T18:49:21 IST" name="testWithMediaBase64" finished-at="2024-02-28T18:49:21 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithMediaBase64 -->
      </class> <!-- com.aventstack.extentreports.AppenderTest -->
      <class name="com.aventstack.extentreports.reporter.JsonFormatterBDDTest">
        <test-method signature="supportsThrowable()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterBDDTest@7188af83]" started-at="2024-02-28T18:49:28 IST" name="supportsThrowable" finished-at="2024-02-28T18:49:28 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supportsThrowable -->
        <test-method is-config="true" signature="beforeHook()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterBDDTest@7188af83]" started-at="2024-02-28T18:49:28 IST" name="beforeHook" finished-at="2024-02-28T18:49:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeHook -->
        <test-method is-config="true" signature="beforeHook()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterBDDTest@7188af83]" started-at="2024-02-28T18:49:28 IST" name="beforeHook" finished-at="2024-02-28T18:49:28 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeHook -->
        <test-method signature="writeRead()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterBDDTest@7188af83]" started-at="2024-02-28T18:49:28 IST" name="writeRead" finished-at="2024-02-28T18:49:28 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeRead -->
      </class> <!-- com.aventstack.extentreports.reporter.JsonFormatterBDDTest -->
      <class name="com.aventstack.extentreports.ExtentTestGeneratedLogTest">
        <test-method signature="generatedLogDetails()[pri:0, instance:com.aventstack.extentreports.ExtentTestGeneratedLogTest@662b4c69]" started-at="2024-02-28T18:49:22 IST" name="generatedLogDetails" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatedLogDetails -->
        <test-method signature="generatedLogMarkup()[pri:0, instance:com.aventstack.extentreports.ExtentTestGeneratedLogTest@662b4c69]" started-at="2024-02-28T18:49:22 IST" name="generatedLogMarkup" finished-at="2024-02-28T18:49:23 IST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatedLogMarkup -->
        <test-method signature="generatedLogEmpty()[pri:0, instance:com.aventstack.extentreports.ExtentTestGeneratedLogTest@662b4c69]" started-at="2024-02-28T18:49:22 IST" name="generatedLogEmpty" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatedLogEmpty -->
      </class> <!-- com.aventstack.extentreports.ExtentTestGeneratedLogTest -->
      <class name="com.aventstack.extentreports.entity.LogEntityTest">
        <test-method signature="addMediaDefault()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="addMediaDefault" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMediaDefault -->
        <test-method signature="addMediaWithPathToLog()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="addMediaWithPathToLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMediaWithPathToLog -->
        <test-method signature="addMediaWithResolvedPathToLog()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="addMediaWithResolvedPathToLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMediaWithResolvedPathToLog -->
        <test-method signature="changedStatus()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="changedStatus" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changedStatus -->
        <test-method signature="defaultStatusBuilder()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="defaultStatusBuilder" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultStatusBuilder -->
        <test-method signature="detailsNullOnInit()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="detailsNullOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detailsNullOnInit -->
        <test-method signature="exceptionsEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="exceptionsEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionsEmptyOnInit -->
        <test-method signature="mediaEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="mediaEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mediaEmptyOnInit -->
        <test-method signature="seqNegOnInit()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="seqNegOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seqNegOnInit -->
        <test-method signature="timestampNonNullOnInit()[pri:0, instance:com.aventstack.extentreports.entity.LogEntityTest@67080771]" started-at="2024-02-28T18:49:22 IST" name="timestampNonNullOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timestampNonNullOnInit -->
      </class> <!-- com.aventstack.extentreports.entity.LogEntityTest -->
      <class name="com.aventstack.extentreports.entity.ReportEntityTest">
        <test-method signature="authorCtx()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="authorCtx" finished-at="2024-02-28T18:49:22 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorCtx -->
        <test-method signature="categoryCtx()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="categoryCtx" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- categoryCtx -->
        <test-method signature="deviceCtx()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="deviceCtx" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceCtx -->
        <test-method signature="exceptionContext()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="exceptionContext" finished-at="2024-02-28T18:49:22 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionContext -->
        <test-method signature="reportIsBDD()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="reportIsBDD" finished-at="2024-02-28T18:49:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportIsBDD -->
        <test-method signature="reportTestHasStatus()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="reportTestHasStatus" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestHasStatus -->
        <test-method signature="startAndEndTimesNonNullAtInit()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="startAndEndTimesNonNullAtInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAndEndTimesNonNullAtInit -->
        <test-method signature="reportTestListSize()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="reportTestListSize" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestListSize -->
        <test-method signature="startIsPassOnInit()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="startIsPassOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startIsPassOnInit -->
        <test-method signature="statsNonNullAtInit()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="statsNonNullAtInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statsNonNullAtInit -->
        <test-method signature="testRunnerLogs()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="testRunnerLogs" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunnerLogs -->
        <test-method signature="testsEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="testsEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsEmptyOnInit -->
        <test-method signature="timeTaken()[pri:0, instance:com.aventstack.extentreports.entity.ReportEntityTest@72cde7cc]" started-at="2024-02-28T18:49:22 IST" name="timeTaken" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTaken -->
      </class> <!-- com.aventstack.extentreports.entity.ReportEntityTest -->
      <class name="com.aventstack.extentreports.markuputils.CodeBlockMarkupTest">
        <test-method signature="jsonCodeBlock()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="jsonCodeBlock" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonCodeBlock -->
        <test-method signature="multipleCodeBlocks1()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="multipleCodeBlocks1" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleCodeBlocks1 -->
        <test-method signature="multipleCodeBlocks2()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="multipleCodeBlocks2" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleCodeBlocks2 -->
        <test-method signature="multipleCodeBlocks3()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="multipleCodeBlocks3" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleCodeBlocks3 -->
        <test-method signature="multipleCodeBlocks4()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="multipleCodeBlocks4" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleCodeBlocks4 -->
        <test-method signature="nullCodeBlockContent()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="nullCodeBlockContent" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullCodeBlockContent -->
        <test-method signature="xmlCodeBlock()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="xmlCodeBlock" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xmlCodeBlock -->
        <test-method signature="xmlCodeBlockWithLang()[pri:0, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="xmlCodeBlockWithLang" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xmlCodeBlockWithLang -->
        <test-method signature="jsonCodeBlockWithLang()[pri:1, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="jsonCodeBlockWithLang" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonCodeBlockWithLang -->
        <test-method signature="jsonCodeBlockWithLangMultiple()[pri:2, instance:com.aventstack.extentreports.markuputils.CodeBlockMarkupTest@2b40ff9c]" started-at="2024-02-28T18:49:23 IST" name="jsonCodeBlockWithLangMultiple" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonCodeBlockWithLangMultiple -->
      </class> <!-- com.aventstack.extentreports.markuputils.CodeBlockMarkupTest -->
      <class name="com.aventstack.extentreports.ExtentTestMediaTest">
        <test-method signature="addScreenCaptureEmptyPathTestLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureEmptyPathTestLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureEmptyPathTestLog(ExtentTestMediaTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureEmptyPathTestLog -->
        <test-method signature="addScreenCaptureFromBase64Node()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64Node" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64Node -->
        <test-method signature="addScreenCaptureFromBase64NodeLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64NodeLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64NodeLog -->
        <test-method signature="addScreenCaptureFromBase64NodeLogOverloads()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64NodeLogOverloads" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64NodeLogOverloads -->
        <test-method signature="addScreenCaptureFromBase64NodeOverloads()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64NodeOverloads" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64NodeOverloads -->
        <test-method signature="addScreenCaptureFromBase64Test()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64Test" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64Test -->
        <test-method signature="addScreenCaptureFromBase64TestLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromBase64TestLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromBase64TestLog -->
        <test-method signature="addScreenCaptureFromEmptyBase64Test()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromEmptyBase64Test" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture's base64 string must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture's base64 string must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromBase64String(ExtentTest.java:1111)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromBase64String(ExtentTest.java:1121)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureFromEmptyBase64Test(ExtentTestMediaTest.java:112)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromEmptyBase64Test -->
        <test-method signature="addScreenCaptureFromEmptyPathTest()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromEmptyPathTest" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1099)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1107)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureFromEmptyPathTest(ExtentTestMediaTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromEmptyPathTest -->
        <test-method signature="addScreenCaptureFromNullBase64Test()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromNullBase64Test" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture's base64 string must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture's base64 string must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromBase64String(ExtentTest.java:1111)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromBase64String(ExtentTest.java:1121)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureFromNullBase64Test(ExtentTestMediaTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromNullBase64Test -->
        <test-method signature="addScreenCaptureFromNullPathTest()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromNullPathTest" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1099)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1107)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureFromNullPathTest(ExtentTestMediaTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromNullPathTest -->
        <test-method signature="addScreenCaptureFromPathNodeLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathNodeLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathNodeLog -->
        <test-method signature="addScreenCaptureFromPathNode()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathNode" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathNode -->
        <test-method signature="addScreenCaptureFromPathTest()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathTest" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathTest -->
        <test-method signature="addScreenCaptureFromPathTestLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathTestLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathTestLog -->
        <test-method signature="addScreenCaptureFromPathTestLogOverloads()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathTestLogOverloads" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathTestLogOverloads -->
        <test-method signature="addScreenCaptureFromPathTestOverloads()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureFromPathTestOverloads" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureFromPathTestOverloads -->
        <test-method signature="addScreenCaptureNullPathTestLog()[pri:0, instance:com.aventstack.extentreports.ExtentTestMediaTest@183ec003]" started-at="2024-02-28T18:49:23 IST" name="addScreenCaptureNullPathTestLog" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at com.aventstack.extentreports.ExtentTestMediaTest.addScreenCaptureNullPathTestLog(ExtentTestMediaTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addScreenCaptureNullPathTestLog -->
      </class> <!-- com.aventstack.extentreports.ExtentTestMediaTest -->
      <class name="com.aventstack.extentreports.observer.ReportEntityObserverTest">
        <test-method signature="disposableNonNull()[pri:0, instance:com.aventstack.extentreports.observer.ReportEntityObserverTest@70ed52de]" started-at="2024-02-28T18:49:25 IST" name="disposableNonNull" finished-at="2024-02-28T18:49:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- disposableNonNull -->
      </class> <!-- com.aventstack.extentreports.observer.ReportEntityObserverTest -->
      <class name="com.aventstack.extentreports.ExtentReportsSystemEnvTest">
        <test-method signature="emptySystemInfo()[pri:0, instance:com.aventstack.extentreports.ExtentReportsSystemEnvTest@76c3e77a]" started-at="2024-02-28T18:49:22 IST" name="emptySystemInfo" finished-at="2024-02-28T18:49:22 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptySystemInfo -->
        <test-method signature="nullSystemInfo()[pri:0, instance:com.aventstack.extentreports.ExtentReportsSystemEnvTest@76c3e77a]" started-at="2024-02-28T18:49:22 IST" name="nullSystemInfo" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullSystemInfo -->
        <test-method signature="systemInfo()[pri:0, instance:com.aventstack.extentreports.ExtentReportsSystemEnvTest@76c3e77a]" started-at="2024-02-28T18:49:22 IST" name="systemInfo" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- systemInfo -->
      </class> <!-- com.aventstack.extentreports.ExtentReportsSystemEnvTest -->
      <class name="com.aventstack.extentreports.entity.TestEntityInitTest">
        <test-method signature="authorsEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="authorsEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorsEmptyOnInit -->
        <test-method signature="childrenEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="childrenEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- childrenEmptyOnInit -->
        <test-method signature="descriptionNullOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="descriptionNullOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descriptionNullOnInit -->
        <test-method signature="devicesEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="devicesEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devicesEmptyOnInit -->
        <test-method signature="levelIs0OnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="levelIs0OnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- levelIs0OnInit -->
        <test-method signature="parentNullOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="parentNullOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parentNullOnInit -->
        <test-method signature="logsEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="logsEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logsEmptyOnInit -->
        <test-method signature="startAndEndTimesNonNullAtInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="startAndEndTimesNonNullAtInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAndEndTimesNonNullAtInit -->
        <test-method signature="tagEmptyOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="tagEmptyOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tagEmptyOnInit -->
        <test-method signature="startIsPassOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="startIsPassOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startIsPassOnInit -->
        <test-method signature="testId1OrGreaterOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="testId1OrGreaterOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testId1OrGreaterOnInit -->
        <test-method signature="testIsLeafOnInit()[pri:0, instance:com.aventstack.extentreports.entity.TestEntityInitTest@29e495ff]" started-at="2024-02-28T18:49:22 IST" name="testIsLeafOnInit" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsLeafOnInit -->
      </class> <!-- com.aventstack.extentreports.entity.TestEntityInitTest -->
      <class name="com.aventstack.extentreports.config.external.XmlConfigLoaderTest">
        <test-method signature="xmlConfigLowerCaseEnumTest()[pri:0, instance:com.aventstack.extentreports.config.external.XmlConfigLoaderTest@11bd0f3b]" started-at="2024-02-28T18:49:22 IST" name="xmlConfigLowerCaseEnumTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xmlConfigLowerCaseEnumTest -->
        <test-method signature="xmlConfigTest()[pri:0, instance:com.aventstack.extentreports.config.external.XmlConfigLoaderTest@11bd0f3b]" started-at="2024-02-28T18:49:22 IST" name="xmlConfigTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xmlConfigTest -->
      </class> <!-- com.aventstack.extentreports.config.external.XmlConfigLoaderTest -->
      <class name="com.aventstack.extentreports.reporter.SparkReporterFilterTest">
        <test-method signature="singleStatusFilterTestAllFiltered()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterFilterTest@247310d0]" started-at="2024-02-28T18:49:29 IST" name="singleStatusFilterTestAllFiltered" finished-at="2024-02-28T18:49:29 IST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleStatusFilterTestAllFiltered -->
        <test-method signature="singleStatusFilterTestOneFiltered()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterFilterTest@247310d0]" started-at="2024-02-28T18:49:29 IST" name="singleStatusFilterTestOneFiltered" finished-at="2024-02-28T18:49:29 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleStatusFilterTestOneFiltered -->
        <test-method signature="singleStatusFilterTestSomeFiltered()[pri:0, instance:com.aventstack.extentreports.reporter.SparkReporterFilterTest@247310d0]" started-at="2024-02-28T18:49:29 IST" name="singleStatusFilterTestSomeFiltered" finished-at="2024-02-28T18:49:29 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleStatusFilterTestSomeFiltered -->
      </class> <!-- com.aventstack.extentreports.reporter.SparkReporterFilterTest -->
      <class name="com.aventstack.extentreports.reporter.JsonFormatterStandardTest">
        <test-method is-config="true" signature="beforeHook()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterStandardTest@6be968ce]" started-at="2024-02-28T18:49:28 IST" name="beforeHook" finished-at="2024-02-28T18:49:28 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeHook -->
        <test-method signature="supportsThrowable()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterStandardTest@6be968ce]" started-at="2024-02-28T18:49:28 IST" name="supportsThrowable" finished-at="2024-02-28T18:49:28 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supportsThrowable -->
        <test-method signature="writeRead()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterStandardTest@6be968ce]" started-at="2024-02-28T18:49:28 IST" name="writeRead" finished-at="2024-02-28T18:49:29 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeRead -->
        <test-method is-config="true" signature="beforeHook()[pri:0, instance:com.aventstack.extentreports.reporter.JsonFormatterStandardTest@6be968ce]" started-at="2024-02-28T18:49:28 IST" name="beforeHook" finished-at="2024-02-28T18:49:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeHook -->
      </class> <!-- com.aventstack.extentreports.reporter.JsonFormatterStandardTest -->
      <class name="com.aventstack.extentreports.ExtentTestNodeTest">
        <test-method signature="createNodeOverloadKeywordName()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadKeywordName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadKeywordName -->
        <test-method signature="createNodeOverloadKeywordNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadKeywordNameDesc" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadKeywordNameDesc -->
        <test-method signature="createNodeOverloadNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadNameDesc" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadNameDesc -->
        <test-method signature="createNodeOverloadName()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadName -->
        <test-method signature="createNodeOverloadTypeNameDesc()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadTypeNameDesc" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadTypeNameDesc -->
        <test-method signature="createNodeOverloadTypeName()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="createNodeOverloadTypeName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNodeOverloadTypeName -->
        <test-method signature="timeCalcNodes()[pri:0, instance:com.aventstack.extentreports.ExtentTestNodeTest@7d9d0818]" started-at="2024-02-28T18:49:23 IST" name="timeCalcNodes" finished-at="2024-02-28T18:49:23 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeCalcNodes -->
      </class> <!-- com.aventstack.extentreports.ExtentTestNodeTest -->
      <class name="com.aventstack.extentreports.entity.service.TestServiceTest">
        <test-method signature="deleteNode()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="deleteNode" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteNode -->
        <test-method signature="deleteTest()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="deleteTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTest -->
        <test-method signature="testHasScreenCaptureDeepLog()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testHasScreenCaptureDeepLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasScreenCaptureDeepLog -->
        <test-method signature="testHasScreenCaptureDeepNode()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testHasScreenCaptureDeepNode" finished-at="2024-02-28T18:49:22 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasScreenCaptureDeepNode -->
        <test-method signature="testHasScreenCaptureDeepNodeLog()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testHasScreenCaptureDeepNodeLog" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasScreenCaptureDeepNodeLog -->
        <test-method signature="testWithBddType()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithBddType" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithBddType -->
        <test-method signature="testWithBddTypeGherkinKeyword()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithBddTypeGherkinKeyword" finished-at="2024-02-28T18:49:22 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithBddTypeGherkinKeyword -->
        <test-method signature="testWithDescription()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithDescription" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithDescription -->
        <test-method signature="testWithEmptyDescription()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithEmptyDescription" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyDescription -->
        <test-method signature="testWithEmptyName()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithEmptyName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:24)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:33)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:37)
at com.aventstack.extentreports.entity.service.TestServiceTest.testWithEmptyName(TestServiceTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyName -->
        <test-method signature="testWithEmptyName2()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithEmptyName2" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:24)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:33)
at com.aventstack.extentreports.entity.service.TestServiceTest.testWithEmptyName2(TestServiceTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyName2 -->
        <test-method signature="testWithNullDescription()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithNullDescription" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNullDescription -->
        <test-method signature="testWithNullBddType()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithNullBddType" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNullBddType -->
        <test-method signature="testWithNullName()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithNullName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:24)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:33)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:37)
at com.aventstack.extentreports.entity.service.TestServiceTest.testWithNullName(TestServiceTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNullName -->
        <test-method signature="testWithNullName2()[pri:0, instance:com.aventstack.extentreports.entity.service.TestServiceTest@2bfc268b]" started-at="2024-02-28T18:49:22 IST" name="testWithNullName2" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:24)
at com.aventstack.extentreports.model.service.TestService.createTest(TestService.java:33)
at com.aventstack.extentreports.entity.service.TestServiceTest.testWithNullName2(TestServiceTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNullName2 -->
      </class> <!-- com.aventstack.extentreports.entity.service.TestServiceTest -->
      <class name="com.aventstack.extentreports.markuputils.TableMarkupTest">
        <test-method signature="tableWithData()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithData" finished-at="2024-02-28T18:49:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithData -->
        <test-method signature="tableWithNullText()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithNullText" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithNullText -->
        <test-method signature="tableWithPojoBeginningEndingTags()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithPojoBeginningEndingTags" finished-at="2024-02-28T18:49:23 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithPojoBeginningEndingTags -->
        <test-method signature="tableWithPojoCells()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithPojoCells" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithPojoCells -->
        <test-method signature="tableWithPojoHeaders()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithPojoHeaders" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithPojoHeaders -->
        <test-method signature="tableWithSingleSet()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithSingleSet" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithSingleSet -->
        <test-method signature="tableWithSingleList()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithSingleList" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithSingleList -->
        <test-method signature="tableWithSingleArray()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithSingleArray" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithSingleArray -->
        <test-method signature="tableWithSingleStringField()[pri:0, instance:com.aventstack.extentreports.markuputils.TableMarkupTest@8462f31]" started-at="2024-02-28T18:49:23 IST" name="tableWithSingleStringField" finished-at="2024-02-28T18:49:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableWithSingleStringField -->
      </class> <!-- com.aventstack.extentreports.markuputils.TableMarkupTest -->
      <class name="com.aventstack.extentreports.markuputils.LabelMarkupTest">
        <test-method signature="labelWithEmptyText()[pri:0, instance:com.aventstack.extentreports.markuputils.LabelMarkupTest@3e08ff24]" started-at="2024-02-28T18:49:23 IST" name="labelWithEmptyText" finished-at="2024-02-28T18:49:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelWithEmptyText -->
        <test-method signature="labelWithNullText()[pri:0, instance:com.aventstack.extentreports.markuputils.LabelMarkupTest@3e08ff24]" started-at="2024-02-28T18:49:23 IST" name="labelWithNullText" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelWithNullText -->
        <test-method signature="labelWithText()[pri:0, instance:com.aventstack.extentreports.markuputils.LabelMarkupTest@3e08ff24]" started-at="2024-02-28T18:49:23 IST" name="labelWithText" finished-at="2024-02-28T18:49:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelWithText -->
      </class> <!-- com.aventstack.extentreports.markuputils.LabelMarkupTest -->
      <class name="com.aventstack.extentreports.gherkin.GherkinNameTest">
        <test-method signature="testAndGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testAndGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndGherkinName -->
        <test-method signature="testAndToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testAndToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndToString -->
        <test-method signature="testAsteriskGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testAsteriskGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsteriskGherkinName -->
        <test-method signature="testAsteriskToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testAsteriskToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsteriskToString -->
        <test-method signature="testBackgroundGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testBackgroundGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackgroundGherkinName -->
        <test-method signature="testBackgroundToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testBackgroundToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackgroundToString -->
        <test-method signature="testButGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testButGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testButGherkinName -->
        <test-method signature="testButToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testButToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testButToString -->
        <test-method signature="testFeatureGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testFeatureGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureGherkinName -->
        <test-method signature="testFeatureToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testFeatureToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureToString -->
        <test-method signature="testGivenGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testGivenGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGivenGherkinName -->
        <test-method signature="testScenarioGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testScenarioGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioGherkinName -->
        <test-method signature="testGivenToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testGivenToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGivenToString -->
        <test-method signature="testScenarioOutlineGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testScenarioOutlineGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOutlineGherkinName -->
        <test-method signature="testScenarioOutlineToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testScenarioOutlineToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOutlineToString -->
        <test-method signature="testScenarioToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testScenarioToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioToString -->
        <test-method signature="testThenGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testThenGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThenGherkinName -->
        <test-method signature="testThenToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testThenToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThenToString -->
        <test-method signature="testWhenGherkinName()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testWhenGherkinName" finished-at="2024-02-28T18:49:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhenGherkinName -->
        <test-method signature="testWhenToString()[pri:0, instance:com.aventstack.extentreports.gherkin.GherkinNameTest@451001e5]" started-at="2024-02-28T18:49:23 IST" name="testWhenToString" finished-at="2024-02-28T18:49:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhenToString -->
      </class> <!-- com.aventstack.extentreports.gherkin.GherkinNameTest -->
      <class name="com.aventstack.extentreports.ExtentTestAttributesHierarchyTest">
        <test-method signature="checkTagHierarchy()[pri:0, instance:com.aventstack.extentreports.ExtentTestAttributesHierarchyTest@67c33749]" started-at="2024-02-28T18:49:22 IST" name="checkTagHierarchy" finished-at="2024-02-28T18:49:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTagHierarchy -->
      </class> <!-- com.aventstack.extentreports.ExtentTestAttributesHierarchyTest -->
      <class name="com.aventstack.extentreports.entity.CategoryEntityTest">
        <test-method signature="tagName()[pri:0, instance:com.aventstack.extentreports.entity.CategoryEntityTest@79da8dc5]" started-at="2024-02-28T18:49:22 IST" name="tagName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tagName -->
      </class> <!-- com.aventstack.extentreports.entity.CategoryEntityTest -->
      <class name="com.aventstack.extentreports.entity.ScreenCaptureTest">
        <test-method signature="initWithAllEntitiesNull()[pri:0, instance:com.aventstack.extentreports.entity.ScreenCaptureTest@4e7912d8]" started-at="2024-02-28T18:49:22 IST" name="initWithAllEntitiesNull" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initWithAllEntitiesNull -->
      </class> <!-- com.aventstack.extentreports.entity.ScreenCaptureTest -->
      <class name="com.aventstack.extentreports.config.external.JsonConfigLoaderTest">
        <test-method signature="jsonConfigLowerCaseEnumTest()[pri:0, instance:com.aventstack.extentreports.config.external.JsonConfigLoaderTest@69e1dd28]" started-at="2024-02-28T18:49:22 IST" name="jsonConfigLowerCaseEnumTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonConfigLowerCaseEnumTest -->
        <test-method signature="jsonConfigTest()[pri:0, instance:com.aventstack.extentreports.config.external.JsonConfigLoaderTest@69e1dd28]" started-at="2024-02-28T18:49:22 IST" name="jsonConfigTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonConfigTest -->
      </class> <!-- com.aventstack.extentreports.config.external.JsonConfigLoaderTest -->
      <class name="com.aventstack.extentreports.config.ConfigStoreTest">
        <test-method signature="configEmpty()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="configEmpty" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configEmpty -->
        <test-method signature="configValueTest()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="configValueTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configValueTest -->
        <test-method signature="containsConfig()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="containsConfig" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsConfig -->
        <test-method signature="duplicateConfig()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="duplicateConfig" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicateConfig -->
        <test-method signature="extendConfigWithMap()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="extendConfigWithMap" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extendConfigWithMap -->
        <test-method signature="extendConfigWithStore()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="extendConfigWithStore" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extendConfigWithStore -->
        <test-method signature="removeConfig()[pri:0, instance:com.aventstack.extentreports.config.ConfigStoreTest@3738449f]" started-at="2024-02-28T18:49:22 IST" name="removeConfig" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeConfig -->
      </class> <!-- com.aventstack.extentreports.config.ConfigStoreTest -->
      <class name="com.aventstack.extentreports.ParallelTest">
        <test-method signature="parallelFlush()[pri:0, instance:com.aventstack.extentreports.ParallelTest@496bc455]" started-at="2024-02-28T18:49:25 IST" name="parallelFlush" finished-at="2024-02-28T18:49:25 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parallelFlush -->
        <test-method signature="parallelLogs()[pri:0, instance:com.aventstack.extentreports.ParallelTest@496bc455]" started-at="2024-02-28T18:49:25 IST" name="parallelLogs" finished-at="2024-02-28T18:49:27 IST" duration-ms="2563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parallelLogs -->
        <test-method signature="parallelTests()[pri:0, instance:com.aventstack.extentreports.ParallelTest@496bc455]" started-at="2024-02-28T18:49:27 IST" name="parallelTests" finished-at="2024-02-28T18:49:27 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parallelTests -->
        <test-method signature="parallelTestsWithReporter()[pri:0, instance:com.aventstack.extentreports.ParallelTest@496bc455]" started-at="2024-02-28T18:49:27 IST" name="parallelTestsWithReporter" finished-at="2024-02-28T18:49:27 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parallelTestsWithReporter -->
      </class> <!-- com.aventstack.extentreports.ParallelTest -->
      <class name="com.aventstack.extentreports.ExtentReportsRemoveTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="beforeMethod" finished-at="2024-02-28T18:49:22 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeNode()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="removeNode" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeNode -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="beforeMethod" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeNodeByName()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="removeNodeByName" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeNodeByName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="beforeMethod" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeTest()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="removeTest" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="beforeMethod" finished-at="2024-02-28T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeTestByName()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="removeTestByName" finished-at="2024-02-28T18:49:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTestByName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="beforeMethod" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeTestWithTag()[pri:0, instance:com.aventstack.extentreports.ExtentReportsRemoveTest@a3d8174]" started-at="2024-02-28T18:49:22 IST" name="removeTestWithTag" finished-at="2024-02-28T18:49:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTestWithTag -->
      </class> <!-- com.aventstack.extentreports.ExtentReportsRemoveTest -->
      <class name="com.aventstack.extentreports.reporter.SparkTagTest">
        <test-method signature="nodeTag()[pri:0, instance:com.aventstack.extentreports.reporter.SparkTagTest@303cf2ba]" started-at="2024-02-28T18:49:30 IST" name="nodeTag" finished-at="2024-02-28T18:49:30 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nodeTag -->
        <test-method is-config="true" signature="before()[pri:0, instance:com.aventstack.extentreports.reporter.SparkTagTest@303cf2ba]" started-at="2024-02-28T18:49:30 IST" name="before" finished-at="2024-02-28T18:49:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="before()[pri:0, instance:com.aventstack.extentreports.reporter.SparkTagTest@303cf2ba]" started-at="2024-02-28T18:49:30 IST" name="before" finished-at="2024-02-28T18:49:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="testTag()[pri:0, instance:com.aventstack.extentreports.reporter.SparkTagTest@303cf2ba]" started-at="2024-02-28T18:49:30 IST" name="testTag" finished-at="2024-02-28T18:49:31 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTag -->
      </class> <!-- com.aventstack.extentreports.reporter.SparkTagTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
